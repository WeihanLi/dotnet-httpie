trigger:
  branches:
    include:
    - 'main'
    - 'preview'
    - 'dev'

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: docker

steps:
- script: |
    docker login -u $(dockerId) -p $(pswd)
  displayName: 'Docker login'

- script: |    
    docker version
    docker buildx version
    # docker run --privileged --rm tonistiigi/binfmt --install all
    docker run --privileged --rm multiarch/qemu-user-static --reset -p yes
    docker buildx create --name container-builder --driver docker-container --driver-opt default-load=true --bootstrap --use
  displayName: 'Setup qemu and docker buildx'

- script: |
    docker buildx build --push -f Dockerfile --platform="linux/amd64,linux/arm64" --output="type=image" -t weihanli/dotnet-httpie:latest .
  displayName: 'Docker build Script'

- script: |
    docker buildx build --push -f Dockerfile --platform="linux/amd64,linux/arm64" --output="type=image" -t weihanli/dotnet-httpie:preview .
  displayName: 'Push preview image'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/preview'))

- script: |
    docker buildx build --push -f Dockerfile --platform="linux/amd64,linux/arm64" --output="type=image" -t weihanli/dotnet-httpie:stable .
  displayName: 'Push stable image'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

- task: UseDotNet@2
  displayName: 'Use .NET SDK'
  inputs:
    packageType: sdk
    version: 10.0.x
    includePreviewVersions: true # Required for preview versions

- script: |
    dotnet tool install -g dotnet-execute
    dotnet-exec info
  displayName: 'dotnet-exec'

- script: |
    dotnet-exec ./build/build-version-image.cs
  displayName: 'Push versioned image'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

- script: |
    docker logout
  displayName: 'Docker logout'
  condition: always()
